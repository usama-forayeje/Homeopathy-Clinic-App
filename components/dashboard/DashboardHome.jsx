// components/dashboard/DashboardHome.jsx
"use client";

import React from 'react'; // Added React import
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Users, Calendar, FileText, TrendingUp, Clock, Plus, ArrowRight } from "lucide-react";
import Link from "next/link";

// You will replace these mock data with actual data fetched from Appwrite using React Query
export function DashboardHome() {
  const stats = [
    {
      title: "‡¶Æ‡ßã‡¶ü ‡¶∞‡ßã‡¶ó‡ßÄ",
      value: "‡ßß,‡ß®‡ß©‡ß™",
      change: "+‡ßß‡ß®%",
      changeType: "positive",
      icon: Users,
      color: "text-primary", // Using primary color
      bgColor: "bg-primary/10", // Using primary color with opacity
    },
    {
      title: "‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶ï‡¶®‡¶∏‡¶æ‡¶≤‡¶ü‡ßá‡¶∂‡¶®",
      value: "‡ß®‡ßÆ",
      change: "+‡ßÆ%",
      changeType: "positive",
      icon: Calendar,
      color: "text-green-600",
      bgColor: "bg-green-100",
    },
    {
      title: "‡¶è‡¶á ‡¶Æ‡¶æ‡¶∏‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡ßá‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡¶∂‡¶®",
      value: "‡ß´‡ß¨‡ß≠",
      change: "+‡ßß‡ß´%",
      changeType: "positive",
      icon: FileText,
      color: "text-purple-600",
      bgColor: "bg-purple-100",
    },
    {
      title: "‡¶Æ‡¶æ‡¶∏‡¶ø‡¶ï ‡¶Ü‡¶Ø‡¶º",
      value: "‡ßÆ‡ß´,‡ß¶‡ß¶‡ß¶ ‡ß≥",
      change: "+‡ß®‡ß®%",
      changeType: "positive",
      icon: TrendingUp,
      color: "text-orange-600",
      bgColor: "bg-orange-100",
    },
  ];

  const recentPatients = [
    { name: "‡¶Ü‡¶π‡¶Æ‡ßá‡¶¶ ‡¶π‡¶æ‡¶∏‡¶æ‡¶®", age: 35, lastVisit: "‡ß® ‡¶ò‡¶®‡ßç‡¶ü‡¶æ ‡¶Ü‡¶ó‡ßá", status: "‡¶®‡¶§‡ßÅ‡¶®" },
    { name: "‡¶´‡¶æ‡¶§‡¶ø‡¶Æ‡¶æ ‡¶ñ‡¶æ‡¶§‡ßÅ‡¶®", age: 28, lastVisit: "‡ß´ ‡¶ò‡¶®‡ßç‡¶ü‡¶æ ‡¶Ü‡¶ó‡ßá", status: "‡¶´‡¶≤‡ßã-‡¶Ü‡¶™" },
    { name: "‡¶Æ‡ßã‡¶π‡¶æ‡¶Æ‡ßç‡¶Æ‡¶¶ ‡¶∞‡¶π‡¶ø‡¶Æ", age: 45, lastVisit: "‡ßß ‡¶¶‡¶ø‡¶® ‡¶Ü‡¶ó‡ßá", status: "‡¶ö‡¶ø‡¶ï‡¶ø‡ßé‡¶∏‡¶æ‡¶ß‡ßÄ‡¶®" },
    { name: "‡¶∏‡¶æ‡¶≤‡¶Æ‡¶æ ‡¶¨‡ßá‡¶ó‡¶Æ", age: 32, lastVisit: "‡ß® ‡¶¶‡¶ø‡¶® ‡¶Ü‡¶ó‡ßá", status: "‡¶∏‡ßÅ‡¶∏‡ßç‡¶•" },
    { name: "‡¶ï‡¶∞‡¶ø‡¶Æ ‡¶â‡¶¶‡ßç‡¶¶‡¶ø‡¶®", age: 52, lastVisit: "‡ß© ‡¶¶‡¶ø‡¶® ‡¶Ü‡¶ó‡ßá", status: "‡¶´‡¶≤‡ßã-‡¶Ü‡¶™" },
  ];

  const upcomingAppointments = [
    { time: "‡ßß‡ß¶:‡ß¶‡ß¶ AM", patient: "‡¶∞‡¶æ‡¶∂‡¶ø‡¶¶‡¶æ ‡¶ñ‡¶æ‡¶§‡ßÅ‡¶®", type: "‡¶®‡¶§‡ßÅ‡¶® ‡¶ï‡¶®‡¶∏‡¶æ‡¶≤‡¶ü‡ßá‡¶∂‡¶®" },
    { time: "‡ßß‡ßß:‡ß©‡ß¶ AM", patient: "‡¶Ü‡¶¨‡ßç‡¶¶‡ßÅ‡¶≤ ‡¶ï‡¶∞‡¶ø‡¶Æ", type: "‡¶´‡¶≤‡ßã-‡¶Ü‡¶™" },
    { time: "‡ß®:‡ß¶‡ß¶ PM", patient: "‡¶®‡¶æ‡¶∏‡¶ø‡¶∞ ‡¶â‡¶¶‡ßç‡¶¶‡¶ø‡¶®", type: "‡¶ö‡ßá‡¶ï-‡¶Ü‡¶™" },
    { time: "‡ß©:‡ß©‡ß¶ PM", patient: "‡¶∞‡ßã‡¶ï‡ßá‡¶Ø‡¶º‡¶æ ‡¶¨‡ßá‡¶ó‡¶Æ", type: "‡¶®‡¶§‡ßÅ‡¶® ‡¶ï‡¶®‡¶∏‡¶æ‡¶≤‡¶ü‡ßá‡¶∂‡¶®" },
  ];

  return (
    <div className="space-y-8 animate-fade-in">
      {/* Welcome Section */}
      <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between">
        <div>
          <h1 className="text-3xl font-bold text-foreground">‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ, ‡¶°. ‡¶∏‡¶æ‡¶π‡ßá‡¶¨! üëã</h1>
          <p className="mt-2 text-muted-foreground">
            ‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ: {new Date().toLocaleDateString("bn-BD")} | ‡¶Ü‡¶ú ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡ß®‡ßÆ‡¶ü‡¶ø ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶∞‡¶Ø‡¶º‡ßá‡¶õ‡ßá
          </p>
        </div>
        <div className="mt-4 sm:mt-0 flex space-x-3">
          <Button asChild>
            <Link href="/dashboard/patients/new">
              <Plus className="h-4 w-4 mr-2" />
              ‡¶®‡¶§‡ßÅ‡¶® ‡¶∞‡ßã‡¶ó‡ßÄ
            </Link>
          </Button>
          <Button variant="outline" asChild>
            <Link href="/dashboard/consultations/new">
              <Calendar className="h-4 w-4 mr-2" />
              ‡¶ï‡¶®‡¶∏‡¶æ‡¶≤‡¶ü‡ßá‡¶∂‡¶®
            </Link>
          </Button>
        </div>
      </div>

      {/* Stats Grid */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        {stats.map((stat, index) => (
          <Card key={index} className="transition-all duration-300 hover:shadow-lg hover:scale-105">
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium text-muted-foreground">{stat.title}</CardTitle>
              <div className={`p-2 rounded-lg ${stat.bgColor}`}>
                <stat.icon className={`h-4 w-4 ${stat.color}`} />
              </div>
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold text-foreground">{stat.value}</div>
              <div className="flex items-center mt-1">
                <Badge variant={stat.changeType === "positive" ? "default" : "destructive"} className="text-xs">
                  {stat.change}
                </Badge>
                <span className="text-xs text-muted-foreground ml-2">‡¶ó‡¶§ ‡¶Æ‡¶æ‡¶∏ ‡¶•‡ßá‡¶ï‡ßá</span>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
        {/* Recent Patients */}
        <Card>
          <CardHeader>
            <div className="flex items-center justify-between">
              <div>
                <CardTitle className="text-xl font-semibold text-foreground">‡¶∏‡¶æ‡¶Æ‡ßç‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ï ‡¶∞‡ßã‡¶ó‡ßÄ‡¶∏‡¶Æ‡ßÇ‡¶π</CardTitle>
                <CardDescription className="text-muted-foreground">‡¶∏‡¶∞‡ßç‡¶¨‡¶∂‡ßá‡¶∑ ‡¶≠‡¶ø‡¶ú‡¶ø‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶∞‡ßã‡¶ó‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ</CardDescription>
              </div>
              <Button variant="outline" size="sm" asChild>
                <Link href="/dashboard/patients">
                  ‡¶∏‡¶¨ ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®
                  <ArrowRight className="h-4 w-4 ml-1" />
                </Link>
              </Button>
            </div>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              {recentPatients.map((patient, index) => (
                <div
                  key={index}
                  className="flex items-center justify-between p-3 rounded-lg bg-muted/20 transition-colors hover:bg-muted/40"
                >
                  <div className="flex items-center space-x-3">
                    <div className="w-10 h-10 bg-primary/10 rounded-full flex items-center justify-center">
                      <span className="text-primary font-semibold">{patient.name.charAt(0)}</span>
                    </div>
                    <div>
                      <p className="font-medium text-foreground">{patient.name}</p>
                      <p className="text-sm text-muted-foreground">
                        ‡¶¨‡¶Ø‡¶º‡¶∏: {patient.age} | {patient.lastVisit}
                      </p>
                    </div>
                  </div>
                  <Badge
                    variant={
                      patient.status === "‡¶®‡¶§‡ßÅ‡¶®"
                        ? "default"
                        : patient.status === "‡¶´‡¶≤‡ßã-‡¶Ü‡¶™"
                          ? "secondary"
                          : patient.status === "‡¶∏‡ßÅ‡¶∏‡ßç‡¶•"
                            ? "outline"
                            : "destructive"
                    }
                  >
                    {patient.status}
                  </Badge>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>

        {/* Today's Appointments */}
        <Card>
          <CardHeader>
            <div className="flex items-center justify-between">
              <div>
                <CardTitle className="text-xl font-semibold text-foreground">‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü‡¶Æ‡ßá‡¶®‡ßç‡¶ü</CardTitle>
                <CardDescription className="text-muted-foreground">‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶®‡¶ø‡¶∞‡ßç‡¶ß‡¶æ‡¶∞‡¶ø‡¶§ ‡¶∏‡¶Æ‡¶Ø‡¶º‡¶∏‡ßÇ‡¶ö‡ßÄ</CardDescription>
              </div>
              <Button variant="outline" size="sm" asChild>
                <Link href="/dashboard/consultations">
                  ‡¶∏‡¶¨ ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®
                  <ArrowRight className="h-4 w-4 ml-1" />
                </Link>
              </Button>
            </div>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              {upcomingAppointments.map((appointment, index) => (
                <div
                  key={index}
                  className="flex items-center space-x-4 p-3 rounded-lg bg-muted/20 transition-colors hover:bg-muted/40"
                >
                  <div className="flex items-center justify-center w-16 h-16 bg-primary/10 rounded-lg">
                    <Clock className="h-6 w-6 text-primary" />
                  </div>
                  <div className="flex-1">
                    <div className="flex items-center justify-between">
                      <p className="font-medium text-foreground">{appointment.patient}</p>
                      <span className="text-sm font-medium text-primary">{appointment.time}</span>
                    </div>
                    <p className="text-sm text-muted-foreground">{appointment.type}</p>
                  </div>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Quick Actions */}
      <Card>
        <CardHeader>
          <CardTitle className="text-xl font-semibold text-foreground">‡¶¶‡ßç‡¶∞‡ßÅ‡¶§ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡¶∂‡¶®</CardTitle>
          <CardDescription className="text-muted-foreground">‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£ ‡¶ï‡¶æ‡¶ú‡¶ó‡ßÅ‡¶≤‡ßã ‡¶¶‡ßç‡¶∞‡ßÅ‡¶§ ‡¶∏‡¶Æ‡ßç‡¶™‡¶®‡ßç‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <Button variant="outline" className="h-20 flex-col space-y-2 bg-transparent" asChild>
              <Link href="/dashboard/patients/new">
                <Users className="h-6 w-6" />
                <span>‡¶®‡¶§‡ßÅ‡¶® ‡¶∞‡ßã‡¶ó‡ßÄ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®</span>
              </Link>
            </Button>
            <Button variant="outline" className="h-20 flex-col space-y-2 bg-transparent" asChild>
              <Link href="/dashboard/consultations/new">
                <Calendar className="h-6 w-6" />
                <span>‡¶ï‡¶®‡¶∏‡¶æ‡¶≤‡¶ü‡ßá‡¶∂‡¶® ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶®</span>
              </Link>
            </Button>
            <Button variant="outline" className="h-20 flex-col space-y-2 bg-transparent" asChild>
              <Link href="/dashboard/prescriptions">
                <FileText className="h-6 w-6" />
                <span>‡¶™‡ßç‡¶∞‡ßá‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡¶∂‡¶® ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®</span>
              </Link>
            </Button>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}